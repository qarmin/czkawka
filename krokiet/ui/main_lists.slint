import { Button, VerticalBox , HorizontalBox, TabWidget, ListView, StandardListView, StandardTableView, CheckBox} from "std-widgets.slint";
import {SelectableTableView} from "selectable_tree_view.slint";
import {LeftSidePanel} from "left_side_panel.slint";
import {CurrentTab, TypeOfOpenedItem} from "common.slint";
import {MainListModel} from "common.slint";

export component MainList {
    in-out property <CurrentTab> active-tab;
    in-out property <[MainListModel]> empty_folder_model;
    in-out property <[MainListModel]> empty_files_model;
    in-out property <[MainListModel]> similar_images_model;
    callback changed_current_tab();
    callback released_key(string);
    
    empty_folders := SelectableTableView {
        visible: root.active-tab == CurrentTab.EmptyFolders;
        min-width: 200px;
        height: parent.height;
        columns: ["Selection", "Folder Name", "Path", "Modification Date"];
        column-sizes: [35px, 100px, 350px, 150px];
        values <=> empty-folder-model;
        parentPathIdx: 2;
        fileNameIdx: 1;
    }

    empty_files := SelectableTableView {
        visible: root.active-tab == CurrentTab.EmptyFiles;
        min-width: 200px;
        height: parent.height;
        columns: ["Selection", "File Name", "Path", "Modification Date"];
        column-sizes: [35px, 100px, 350px, 150px];
        values <=> empty-files-model;
        parentPathIdx: 2;
        fileNameIdx: 1;
    }

    similar_images := SelectableTableView {
        visible: root.active-tab == CurrentTab.SimilarImages;
        min-width: 200px;
        height: parent.height;
        columns: ["Selection", "Similarity", "Size", "Dimensions", "File Name", "Path", "Modification Date"];
        column-sizes: [35px, 80px, 80px, 80px, 100px, 350px, 150px];
        values <=> similar-images-model;
        parentPathIdx: 5;
        fileNameIdx: 4;
    }
    focus_item := FocusScope {
        key-released(event) => {
            if (!self.visible || !self.has-focus) {
                return accept;
            }
            if (root.active-tab == CurrentTab.EmptyFiles) {
                empty_files.released_key(event);
            } else if (root.active-tab == CurrentTab.EmptyFolders) {
                empty-folders.released_key(event);
            } else if (root.active-tab == CurrentTab.SimilarImages) {
                similar-images.released_key(event);
            } else {
                debug("Non handled key in main_lists.slint");
            }
            accept
        }
    }
    changed_current_tab() => {
        empty_folders.deselect_selected_item();
        empty_files.deselect_selected_item();
        similar_images.deselect_selected_item();
    }
}
